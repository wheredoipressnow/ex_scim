# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: ExScim Multi-Project CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    name: Test ${{ matrix.project }}
    runs-on: ubuntu22
    
    strategy:
      matrix:
        project:
          - ex_scim
          - ex_scim_ecto
          - ex_scim_phoenix
          - examples/provider

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
      with:
        elixir-version: '1.18.2' # [Required] Define the Elixir version
        otp-version: '27.0'      # [Required] Define the Erlang/OTP version
    
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: ${{ matrix.project }}/deps
        key: ${{ runner.os }}-mix-${{ matrix.project }}-${{ hashFiles(format('{0}/mix.lock', matrix.project)) }}
        restore-keys: ${{ runner.os }}-mix-${{ matrix.project }}-
    
    - name: Install dependencies
      working-directory: ${{ matrix.project }}
      run: mix deps.get
    
    - name: Compile project
      working-directory: ${{ matrix.project }}
      run: mix compile --warnings-as-errors
    
    - name: Run tests
      working-directory: ${{ matrix.project }}
      run: mix test




